# 배낭문제

# K = 버틸 수 있는 무게
N,K = map(int, input().split())


# 무게와 가치 순으로 제공
A = [[0,0]]
B = [list(map(int, input().split())) for _ in range(N)]
A = A + B

# dp 테이블은 가로는 무게, 세로는 N으로 지정
dp = [[0] * (K+1) for _ in range(N+1)] 


# i번째 보석이 배낭 무게 한도보다 무거우면 넣을 수 없으므로 뺀 나머지 보석을 가진 전 단계 값을 그대로 가져온다

# 그게 아니라면 i번째 보석을 위해 max(i번째 보석 가격을 더한 값 또는 or i-1번째 보석들을 가지고 구하기 전 단계 중 큰 값을 선택)

# 그래 그리 쉽지는 않겠지
  
for i in range(1, N+1):
    for w in range(1, K+1):
            # 배낭 무게보다 크니깐 전단계 값 가져오기
            if A[i][0] > w:
                dp[i][w] = dp[i-1][w]
            # 선택하세요 용사여 (보석을 선택하던가, 기존 값이랑 비교해서 큰 거 쓰던가)
            else:
                dp[i][w] = max(A[i][1] + dp[i-1][w - A[i][0]], dp[i-1][w])
                # 딴건 다 이해했는데 w - A[i][0] 가 조금 헷갈리네 ㅎㅎ;;
        
print(dp[-1][-1])